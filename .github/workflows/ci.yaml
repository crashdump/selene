name: ci

on:
  push:

jobs:
  test:
    name: "test"
    runs-on:  ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: x64

      - uses: Gr1N/setup-poetry@v7

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - run: |
          poetry run python -m pytest -v --cov=src/ tests/
          poetry run python -m coverage report -m;
          poetry run python -m coverage xml
        env:
          PYTHONPATH: "src/"

  build:
    name: "build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          tags: ghcr.io/crashdump/selene:latest
          push: false
          # build on feature branches, push only on main branch
          # push: ${{ github.ref == 'refs/heads/main' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}